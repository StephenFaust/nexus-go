// Code generated by protoc-gen-nexus.

package message

import (
	"nexus-go/nexus"
)

// TestCommandServiceClient  this is description
type TestCommandServiceClient struct {
	client *nexus.RpcClient
}

func NewTestCommandServiceClient(client *nexus.RpcClient) TestCommandServiceClient {
	return TestCommandServiceClient{
		client: client,
	}
}

// Add  this is method description
func (sc *TestCommandServiceClient) Add(args *TestRequest, reply *TestResponse) error {
	return sc.client.Invoke(args, "TestCommandService", "Add", reply)
}

// Sub  this is method description
func (sc *TestCommandServiceClient) Sub(args *TestRequest, reply *TestResponse) error {
	return sc.client.Invoke(args, "TestCommandService", "Sub", reply)
}

// Mul  this is method description
func (sc *TestCommandServiceClient) Mul(args *TestRequest, reply *TestResponse) error {
	return sc.client.Invoke(args, "TestCommandService", "Mul", reply)
}

// Div  this is method description
func (sc *TestCommandServiceClient) Div(args *TestRequest, reply *TestResponse) error {
	return sc.client.Invoke(args, "TestCommandService", "Div", reply)
}

type TestQueryServiceClient struct {
	client *nexus.RpcClient
}

func NewTestQueryServiceClient(client *nexus.RpcClient) TestQueryServiceClient {
	return TestQueryServiceClient{
		client: client,
	}
}
func (sc *TestQueryServiceClient) GetUserById(args *UserReq, reply *User) error {
	return sc.client.Invoke(args, "TestQueryService", "GetUserById", reply)
}

func (sc *TestQueryServiceClient) ListUserByIds(args *ListUserReq, reply *UserResp) error {
	return sc.client.Invoke(args, "TestQueryService", "ListUserByIds", reply)
}
